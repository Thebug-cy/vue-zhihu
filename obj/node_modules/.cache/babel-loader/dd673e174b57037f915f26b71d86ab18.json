{"remainingRequest":"/Users/w/Documents/三阶段/2020-9-22/obj/node_modules/babel-loader/lib/index.js!/Users/w/Documents/三阶段/2020-9-22/obj/src/store/actions.js","dependencies":[{"path":"/Users/w/Documents/三阶段/2020-9-22/obj/src/store/actions.js","mtime":1600967442587},{"path":"/Users/w/Documents/三阶段/2020-9-22/obj/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/w/Documents/三阶段/2020-9-22/obj/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvdy9Eb2N1bWVudHMvXHU0RTA5XHU5NjM2XHU2QkI1LzIwMjAtOS0yMi9vYmovbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfYWN0aW9uczsKCmltcG9ydCB7IFVQREFURV9IT01FLCBVUERBVEVfQkFOTkVSLCBVUERBVEVfQ09MVU1OLCBVUERBVEVfRklORCwgVVBEQVRFX0RFVEFJTCwgVVBEQVRFX1VTRVIgfSBmcm9tICcuL3R5cGVzLmpzJzsKaW1wb3J0IHsgZ2V0UXVlcnkgfSBmcm9tICcuLi9zZXJ2aWNlcy9nZXRRdWVyeUxpc3QuanMnOwp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFVQREFURV9IT01FLCBmdW5jdGlvbiAoX3JlZikgewogIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsCiAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogIHJldHVybiBnZXRRdWVyeSh7CiAgICBjb2xsZWN0aW9uTmFtZTogJ2hvbWUnCiAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICByZXR1cm4gcmVzID09PSAwICYmIGNvbW1pdChVUERBVEVfSE9NRSwgcmVzKTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX0JBTk5FUiwgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGUsCiAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICByZXR1cm4gZ2V0UXVlcnkoewogICAgY29sbGVjdGlvbk5hbWU6ICdiYW5uZXInLAogICAgcGFyYW1zOiB7CiAgICAgIF9saW1pdDogNQogICAgfQogIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgcmV0dXJuIHJlcyA9PT0gMCAmJiBjb21taXQoVVBEQVRFX0JBTk5FUiwgcmVzKTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX0NPTFVNTiwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIHN0YXRlID0gX3JlZjMuc3RhdGUsCiAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICByZXR1cm4gZ2V0UXVlcnkoewogICAgY29sbGVjdGlvbk5hbWU6ICdjb2x1bW4nLAogICAgcGFyYW1zOiB7CiAgICAgIF9saW1pdDogNTAKICAgIH0KICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiBjb21taXQoVVBEQVRFX0NPTFVNTiwgcmVzKTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX0ZJTkQsIGZ1bmN0aW9uIChfcmVmNCkgewogIHZhciBzdGF0ZSA9IF9yZWY0LnN0YXRlLAogICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgcmV0dXJuIGdldFF1ZXJ5KHsKICAgIGNvbGxlY3Rpb25OYW1lOiAnZmluZCcsCiAgICBwYXJhbXM6IHsKICAgICAgX2xpbWl0OiAxMAogICAgfQogIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgcmV0dXJuIGNvbW1pdChVUERBVEVfRklORCwgcmVzKTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX0RFVEFJTCwgZnVuY3Rpb24gKF9yZWY1LCBfcmVmNikgewogIHZhciBzdGF0ZSA9IF9yZWY1LnN0YXRlLAogICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgdmFyIF9pZCA9IF9yZWY2Ll9pZCwKICAgICAgY29sbGVjdGlvbk5hbWUgPSBfcmVmNi5jb2xsZWN0aW9uTmFtZTsKICByZXR1cm4gZ2V0UXVlcnkoewogICAgY29sbGVjdGlvbk5hbWU6IGNvbGxlY3Rpb25OYW1lLAogICAgX2lkOiBfaWQKICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiBjb21taXQoVVBEQVRFX0RFVEFJTCwgcmVzKTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX1VTRVIsIGZ1bmN0aW9uIChfcmVmNykgewogIHZhciBzdGF0ZSA9IF9yZWY3LnN0YXRlLAogICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgcmV0dXJuIGdldFF1ZXJ5KHsKICAgIGNvbGxlY3Rpb25OYW1lOiAnaG9tZScKICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiBjb21taXQoVVBEQVRFX1VTRVIsIHJlcyk7CiAgfSk7Cn0pLCBfYWN0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IGFjdGlvbnM7"},{"version":3,"sources":["/Users/w/Documents/三阶段/2020-9-22/obj/src/store/actions.js"],"names":["UPDATE_HOME","UPDATE_BANNER","UPDATE_COLUMN","UPDATE_FIND","UPDATE_DETAIL","UPDATE_USER","getQuery","actions","state","commit","collectionName","then","res","params","_limit","_id"],"mappings":";;;;AAAA,SACIA,WADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,WANJ,QAOO,YAPP;AASA,SAASC,QAAT,QAAyB,6BAAzB;AACA,IAAIC,OAAO,6CACNP,WADM,EACQ;AAAA,MAAGQ,KAAH,QAAGA,KAAH;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,SAAuBH,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAAR,CACjCC,IADiC,CAC5B,UAAAC,GAAG;AAAA,WAAIA,GAAG,KAAK,CAAR,IAAaH,MAAM,CAACT,WAAD,EAAcY,GAAd,CAAvB;AAAA,GADyB,CAAvB;AAAA,CADR,6BAGNX,aAHM,EAGU;AAAA,MAAGO,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,SAAuBH,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAE,QAAlB;AAA4BG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAApC,GAAD,CAAR,CACnCH,IADmC,CAC9B,UAAAC,GAAG;AAAA,WAAIA,GAAG,KAAK,CAAR,IAAaH,MAAM,CAACR,aAAD,EAAgBW,GAAhB,CAAvB;AAAA,GAD2B,CAAvB;AAAA,CAHV,6BAKNV,aALM,EAKU;AAAA,MAAGM,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,SAAuBH,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAE,QAAlB;AAA4BG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAApC,GAAD,CAAR,CACnCH,IADmC,CAC9B,UAAAC,GAAG;AAAA,WAAIH,MAAM,CAACP,aAAD,EAAgBU,GAAhB,CAAV;AAAA,GAD2B,CAAvB;AAAA,CALV,6BAONT,WAPM,EAOQ;AAAA,MAAGK,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,SAAuBH,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAE,MAAlB;AAA0BG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAlC,GAAD,CAAR,CACjCH,IADiC,CAC5B,UAAAC,GAAG;AAAA,WAAIH,MAAM,CAACN,WAAD,EAAcS,GAAd,CAAV;AAAA,GADyB,CAAvB;AAAA,CAPR,6BASNR,aATM,EASU;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,MAAsBM,GAAtB,SAAsBA,GAAtB;AAAA,MAA2BL,cAA3B,SAA2BA,cAA3B;AAAA,SAAgDJ,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAdA,cAAF;AAAkBK,IAAAA,GAAG,EAAHA;AAAlB,GAAD,CAAR,CAC5DJ,IAD4D,CACvD,UAAAC,GAAG;AAAA,WAAIH,MAAM,CAACL,aAAD,EAAgBQ,GAAhB,CAAV;AAAA,GADoD,CAAhD;AAAA,CATV,6BAWNP,WAXM,EAWQ;AAAA,MAAGG,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,SAAuBH,QAAQ,CAAC;AAAEI,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAAR,CACjCC,IADiC,CAC5B,UAAAC,GAAG;AAAA,WAAIH,MAAM,CAACJ,WAAD,EAAcO,GAAd,CAAV;AAAA,GADyB,CAAvB;AAAA,CAXR,YAAX;AAcA,eAAeL,OAAf","sourcesContent":["import {\n    UPDATE_HOME,\n    UPDATE_BANNER,\n    UPDATE_COLUMN,\n    UPDATE_FIND,\n    UPDATE_DETAIL,\n    UPDATE_USER,\n} from './types.js'\n\nimport { getQuery } from '../services/getQueryList.js'\nlet actions = {\n    [UPDATE_HOME]: ({ state, commit }) => getQuery({ collectionName: 'home' })\n        .then(res => res === 0 && commit(UPDATE_HOME, res)),\n    [UPDATE_BANNER]: ({ state, commit }) => getQuery({ collectionName: 'banner', params: { _limit: 5 } })\n        .then(res => res === 0 && commit(UPDATE_BANNER, res)),\n    [UPDATE_COLUMN]: ({ state, commit }) => getQuery({ collectionName: 'column', params: { _limit: 50 } })\n        .then(res => commit(UPDATE_COLUMN, res)),\n    [UPDATE_FIND]: ({ state, commit }) => getQuery({ collectionName: 'find', params: { _limit: 10 } })\n        .then(res => commit(UPDATE_FIND, res)),\n    [UPDATE_DETAIL]: ({ state, commit }, { _id, collectionName }) => getQuery({ collectionName, _id })\n        .then(res => commit(UPDATE_DETAIL, res)),\n    [UPDATE_USER]: ({ state, commit }) => getQuery({ collectionName: 'home' })\n        .then(res => commit(UPDATE_USER, res))\n}\nexport default actions"]}]}